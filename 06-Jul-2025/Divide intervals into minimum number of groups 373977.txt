# Problem: Divide intervals into minimum number of groups - https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups/

class Solution {
public:
    int minGroups(vector<vector<int>>& intervals) {
        ios::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
        vector<pair<int,int>>temp;
        for(int i=0;i<intervals.size();i++){
            temp.push_back({intervals[i][0],1});
            temp.push_back({intervals[i][1]+1,-1});
        }
        sort(temp.begin(),temp.end());
        int cnt=0;
        int maxcnt=0;
        for(pair<int,int> it: temp){
            cnt+=it.second;
            maxcnt=max(maxcnt,cnt);
        }
        return maxcnt;
    }
};