# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        visited = [False] * n
        initial.sort()
        initials_set = set(initial)

        def dfs(node, init, count):
            visited[node] = True
            if node in initials_set:
                init += 1
            count += 1

            for i in range(n):
                if graph[node][i] == 1 and not visited[i]:
                    count, init = dfs(i, init, count)
            
            return count, init

        ans = [-1, -1, 0]
        for starting_node in initial:
            if not visited[starting_node]:
                count, init= dfs(starting_node, 0, 0)
                if init - 1:
                    if ans[1] < 0:
                        ans = [starting_node, 0, count]
                    elif ans[1] == 0:
                        if count < ans[2]:
                            ans = [starting_node, 0, count]
                else:
                    if ans[1] < count:
                        ans = [starting_node, count, 0]
        
        return ans[0]
        